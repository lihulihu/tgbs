<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jlc.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.jlc.commons.result.UserVo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="loginname" jdbcType="VARCHAR" property="loginname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="usertype" jdbcType="VARCHAR" property="usertype" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
    <result column="createdate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="interest" jdbcType="VARCHAR" property="interest" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="height" jdbcType="VARCHAR" property="height" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="academy" jdbcType="VARCHAR" property="academy" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
  </resultMap>
  <resultMap id="userVoResultMap" type="com.jlc.commons.result.UserVo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="loginname" property="loginname" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="VARCHAR"/>
        <result column="usertype" property="usertype" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="organization_id" property="organizationId" jdbcType="INTEGER"/>
        <result column="createdate" property="createdate" jdbcType="TIMESTAMP"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        
        <result column="school" jdbcType="VARCHAR" property="school" />
   		<result column="profession" jdbcType="VARCHAR" property="profession" />
   	    <result column="interest" jdbcType="VARCHAR" property="interest" />
        <result column="place" jdbcType="VARCHAR" property="place" />
        <result column="height" jdbcType="VARCHAR" property="height" />
        <result column="nation" jdbcType="VARCHAR" property="nation" />
        <result column="birthday" jdbcType="DATE" property="birthday" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="photo" jdbcType="VARCHAR" property="photo" />
        <result column="academy" jdbcType="VARCHAR" property="academy" />
        <result column="grade" jdbcType="VARCHAR" property="grade" />

        <result column="organizationName" property="organizationName" jdbcType="VARCHAR"/>

        <collection property="rolesList" ofType="Role">
            <id column="roleId" property="id"/>
            <result column="roleName" property="name"/>
        </collection>
    </resultMap>
  <sql id="Base_Column_List">
    id, loginname, name, password, sex, age, usertype, status, organization_id, createdate, 
    phone, school, profession, interest, place, height, nation, birthday, remark, photo, 
    academy, grade
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jlc.commons.result.UserVo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (loginname, name, password, 
      sex, age, usertype, 
      status, organization_id, createdate, 
      phone, school, profession, 
      interest, place, height, 
      nation, birthday, remark, 
      photo, academy, grade
      )
    values (#{loginname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, #{usertype,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{organizationId,jdbcType=INTEGER},now(), 
      #{phone,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{profession,jdbcType=VARCHAR}, 
      #{interest,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}, #{height,jdbcType=VARCHAR}, 
      #{nation,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, 
      #{photo,jdbcType=VARCHAR}, #{academy,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jlc.commons.result.UserVo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginname != null">
        loginname,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="usertype != null">
        usertype,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="createdate != null">
        createdate,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="interest != null">
        interest,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="academy != null">
        academy,
      </if>
      <if test="grade != null">
        grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginname != null">
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="interest != null">
        #{interest,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        #{academy,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jlc.commons.result.UserVo">
    update user
    <set>
      <if test="loginname != null">
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        usertype = #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="interest != null">
        interest = #{interest,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        academy = #{academy,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jlc.commons.result.UserVo">
    update user
    set loginname = #{loginname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=VARCHAR},
      usertype = #{usertype,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      organization_id = #{organizationId,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      interest = #{interest,jdbcType=VARCHAR},
      place = #{place,jdbcType=VARCHAR},
      height = #{height,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      academy = #{academy,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
   <select id="findUserByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where loginname = #{username}
    </select>
    <select id="findUserById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id}
    </select>
    <select id="findUserPageCondition" resultMap="userVoResultMap" parameterType="PageInfo">
        SELECT
        t.id,
        t.loginname,
        t.name,
        t.password,
        t.sex,
        t.age,
        t.usertype,
        t.status,
        t.organization_id,
        t.createdate,
        t.phone,
        
        t.school, 
        t.profession, 
        t.interest, 
        t.place, 
        t.height, 
        t.nation, 
        t.birthday, 
        t.remark, 
        t.photo, 
    	t.academy, 
    	t.grade,
        
        s.name AS organizationName,
        o.id AS roleId,
        o.name AS roleName
        FROM
        user t
        LEFT JOIN user_role r ON t.id = r.user_id
        LEFT JOIN role o ON r.role_id = o.id
        LEFT JOIN organization s ON s.id = t.organization_id
        <trim prefix="WHERE" prefixOverrides="AND|OR ">
            <if test=" condition.name != null and condition.name != '' ">
                t.name = #{condition.name}
            </if>
            and t.usertype = "1"
            <if test=" condition.organizationId != null ">
               and
                <foreach collection="condition.organizationId" index="index" item="item" separator="or">     
				 	t.organization_id = #{item}
    			</foreach>
            </if>
            <if test="condition.startTime != null">
                <![CDATA[
            and t.createdate >= #{condition.startTime}
           ]]>
            </if>
            <if test="condition.endTime != null">
                <![CDATA[
            and t.createdate <= #{condition.endTime}
        ]]>
            </if>
       </trim>
        LIMIT #{from}, #{size}
    </select>
     <select id="findUserPageCount" resultType="java.lang.Integer" parameterType="PageInfo">
        select count(*) count
        from user t
      	<trim prefix="WHERE" prefixOverrides="AND|OR ">
            <if test=" condition.name != null and condition.name != '' ">
                t.name = #{condition.name}
            </if>
				and t.usertype = "1"
            <if test=" condition.organizationId != null ">
           		 and
               <foreach collection="condition.organizationId" index="index" item="item" separator="or">     
				 	t.organization_id = #{item}
    			</foreach>
            </if>
            <if test="condition.startTime != null">
                <![CDATA[
            and t.createdate >= #{condition.startTime}
           ]]>
            </if>
            <if test="condition.endTime != null">
                <![CDATA[
            and t.createdate <= #{condition.endTime}
            ]]>
            </if>
        </trim>
    </select>
     <update id="updateUserPwdById">
    update user
    set password = #{pwd,jdbcType=VARCHAR},
    createdate = now()
    where id = #{userId,jdbcType=BIGINT}
  </update>
  <select id="findUserVoById" resultMap="userVoResultMap" parameterType="java.lang.Long">
        SELECT
        t.id,
        t.loginname,
        t.name,
        t.password,
        t.sex,
        t.age,
        t.usertype,
        t.status,
        t.organization_id,
        t.createdate,
        t.phone,
        
        t.school, 
        t.profession, 
        t.interest, 
        t.place, 
        t.height, 
        t.nation, 
        t.birthday, 
        t.remark, 
        t.photo, 
    	t.academy, 
    	t.grade,
    	
        s.name AS organizationName,
        o.id AS roleId,
        o.name AS roleName
        FROM
        user t
        LEFT JOIN user_role r ON t.id = r.user_id
        LEFT JOIN role o ON r.role_id = o.id
        LEFT JOIN organization s ON s.id = t.organization_id
        <where>
            t.id = #{id}
        </where>
    </select>

    
</mapper>